\pdfbookmark[1]{Résumé}{resume}

\chapter*{Résumé}
% \begin{center}
%   \textsc{\mytitle}
% \end{center}
\vspace*{-10mm}
\begin{small}
La notion de contexte est fondamentale dans le champ de l’informatique ubiquitaire. En particulier lorsque des services assistent un utilisateur dans ses activités quotidiennes. 

Parce qu’elle implique plusieurs disciplines, une maison équipée d’informatique ubiquitaire dédiée au maintien à domicile de personnes âgées demande l’implication d'une variété d’intervenants, tant pour concevoir et développer des services d'assistance, que pour déployer et maintenir l'infrastructure sous-jacente. Cette grande diversité d’intervenants correspond à une diversité de contextes. Ces différents contextes sont généralement étudiés séparément, empêchant toute synergie.

Cette thèse présente une méthodologie permettant d'unifier la conception et le développement de services sensibles au contexte et de répondre aux besoins de tout type d'intervenant.

Dans un premier temps, nous traitons les besoins des intervenants concernant l’infrastructure de capteurs/actionneurs: installation, maintenance et exploitation. Le modèle d’infrastructure de capteurs et un ensemble de règles en résultant permettent de superviser en continu l’infrastructure et de détecter des dysfonctionnements. Cette supervision simplifie le processus de développement d’applications, en faisant abstraction des problèmes d’infrastructure.

Dans un second temps, nous analysons un large éventail de services d’assistance domiciliaire dédié aux personnes âgées, en considérant la variété des besoins des intervenants. Grâce à cette analyse, nous généralisons l’approche de modèle d'infrastructure à tout type de services. Notre méthodologie permet de définir des services de façon unifiée, à travers un langage dédié, appelé Maloya, exprimant des règles manipulant les concepts d’état et d’évènement. Nous avons développé un compilateur de notre langage vers un langage événementiel dont l’exécution s’appuie sur un moteur de traitement d’évènements complexes (CEP).

Nous avons validé notre approche en définissant un large éventail de services d’assistance à la personne, à partir de services existants, et concernant l’ensemble des intervenants du domaine. Nous avons compilé et exécuté les services Maloya sur un moteur de traitement d’évènements complexes. Les performances obtenues en terme de latence et d'occupation mémoire sont satisfaisantes pour le domaine et compatible avec une exécution 24 heures sur 24 sur le long terme.

%Les performances obtenues sont satisfaisantes pour le domaine avec une latence de détection inférieure à une seconde et une consommation mémoire compatible avec une exécution 24 heures sur 24 sur le long terme.

\vskip 1.0em
 
\noindent\textsc{Mots cl\'es~:} 
Assistance domiciliaire,
Détection d’évènements complexes, 
Langage dédié,
Sensibilité au contexte
\end{small}
\clearpage
\chapter*{Abstract}
\pdfbookmark[1]{Abstract}{abstract}
\vspace*{-15mm}
\begin{center}
  \textsc{\mytitle}
\end{center}
\vspace*{-3mm}
% For this bit we switch into French to make hyphenation and friends
% play nicely.
\begin{small}
The notion of {\em context} is fundamental to the field of pervasive computing, and in particular when such services are dedicated to assist a user in his daily activities.

Being at the crossroad of various fields, a context-aware home dedicated to aging in place involves a variety of stakeholders to design and develop assistive services, as well as to deploy and maintain the underlying infrastructure. 
This considerable diversity of stakeholders raises correspondingly diverse context dimensions: each service relies on specific contexts (e.g., sensor status for a maintenance service, fridge usage for a meal activity recognition service). Typically, these contexts are considered separately, preventing any synergy.

This dissertation presents a methodology for unifying the design and development of various domestic context-aware services, which addresses the requirements of all the stakeholders. 

In a first step, we handle the needs of stakeholders concerned by the sensors infrastructure: installers, maintainers and operators. We define an infrastructure model of a home and a set of rules to continuously monitor the sensor infrastructure and raise failure when appropriate. This continuous monitoring simplifies application development by abstracting it from infrastructure concerns. 

In a second step, we analyze a range of services for aging in place, considering the whole diversity of stakeholders. Based on this analysis, we generalize the approach developed for the infrastructure to all assistive services. Our methodology allows to define unified services, in the form of rules processing events and states. To express such rules, we define a domain-specific design language, named Maloya. We developed a compiler from our langage using as a backend an event processing language, which is executed on a complex event processing (CEP) engine.

To validate our approach, we define a wide range of assistive services with our language, which reimplement existing deployed services belonging to all of the stakeholders. 
These Maloya services were deployed and successfully tested for their effectiveness in performing the specific tasks of the stakeholders. 
Latency and memory consumption performance turned out to be fully compatible with a 24/7 execution in the long run.
%Les performances obtenues sont satisfaisantes pour le domaine avec une latence de détection inférieure à une seconde et une consommation mémoire compatible avec une exécution 24 heures sur 24 sur le long terme.


\vskip 1.0em
 
\noindent\textsc{Keywords:} 
Assistive services,
Complex event processing, 
Domain-specific language,
Context-aware

\end{small}